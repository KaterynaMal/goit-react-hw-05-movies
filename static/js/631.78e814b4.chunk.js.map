{"version":3,"file":"static/js/631.78e814b4.chunk.js","mappings":"iOAgEA,UA1DiB,WAAO,IAADA,EAAAC,EACbC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAWC,EAAAA,EAAAA,MACjBC,GAAmBP,EAAAA,EAAAA,UAA6B,QAArBL,EAAe,QAAfC,EAACS,EAASG,aAAK,IAAAZ,OAAA,EAAdA,EAAgBa,YAAI,IAAAd,EAAAA,EAAI,KAA7Ce,GAAiDR,EAAAA,EAAAA,GAAAK,EAAA,GAAzC,IAEfI,EAAAA,EAAAA,YAAU,WACR,GAAKd,EAAL,CAEA,IAAMe,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoB,OAFpBF,EAAAC,KAAA,EAERH,EAAQ,UAAAK,OAAazB,EAAO,YAAAsB,EAAAE,KAAA,GACbE,EAAAA,EAAAA,GAAcN,GAAU,KAAD,EAAtCC,EAAMC,EAAAK,KACZpB,EAAQc,EAAOf,MAAMgB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAErBO,QAAQC,MAAM,SAAUR,EAAAM,GAAMG,SAAS,yBAAAT,EAAAU,OAAA,GAAAb,EAAA,kBAE1C,kBARc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KASfnB,GAXoB,CAYtB,GAAG,CAACf,IAKJ,OACEmC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI1B,EAASuB,UACjBC,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAC,cAEvB9B,IACC+B,EAAAA,EAAAA,KAAA,MAAAD,SACG9B,EAAKmC,KAAI,SAAAC,GAAK,OACbP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EAOEC,EAAAA,EAAAA,KAAA,OACEM,IACED,EAAME,aACF,CAAC,mCAADnB,OAAoCiB,EAAME,eApB5D,gFAuBYC,IAAI,SACJC,MAAO,OAGTT,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAMK,QACVZ,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYM,EAAMM,eAhBnB1C,EAAK2C,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOT,EAAMS,EAAE,IACpCT,EAAMS,GAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3BZ,EAAMS,GAeT,QAMjB,C,8FC3DMzB,EAAa,eAAAV,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAmC,EAAAC,EAAA,OAAAtC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETiC,EAAAA,EAAAA,IAAU,+BAADhC,OACCL,EAAQ,aAAAK,OAL7B,qCAMV,KAAD,EAFW,OAEX8B,EAAAjC,EAAAK,KAFO6B,EAAID,EAAJC,KAAIlC,EAAAoC,OAAA,SAGLF,GAAI,OAAAlC,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEXO,QAAQC,MAAM,SAAUR,EAAAM,GAAMG,SAAS,yBAAAT,EAAAU,OAAA,GAAAb,EAAA,kBAE1C,gBATkBwC,GAAA,OAAA3C,EAAAiB,MAAA,KAAAC,UAAA,I","sources":["pages/CastPage.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport React from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\n\nimport { requestMovies } from 'services/api';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const location = useLocation();\n  const [backLink] = useState(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchCast = async () => {\n      try {\n        const endpoint = `/movie/${movieId}/credits`;\n        const result = await requestMovies(endpoint);\n        setCast(result.cast);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  return (\n    <div>\n      <Link to={backLink}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      {cast && (\n        <ul>\n          {cast.map(actor => (\n            <li\n              key={\n                cast.some(child => child.id === actor.id)\n                  ? actor.id + Math.floor(Math.random() * 1000000)\n                  : actor.id\n              }\n            >\n              <img\n                src={\n                  actor.profile_path\n                    ? [`https://image.tmdb.org/t/p/w500/${actor.profile_path}`]\n                    : defaultImg\n                }\n                alt=\"poster\"\n                width={250}\n              />\n\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default CastPage;\n","import axios from 'axios';\n\nconst API_KEY = 'f0dfa7497e7951551870a1200c4b66ff';\n\nconst requestMovies = async endpoint => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n};\n\nexport { requestMovies };\n"],"names":["_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","location","useLocation","_useState3","state","from","backLink","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","result","_context","prev","next","concat","requestMovies","sent","t0","console","error","message","stop","apply","arguments","_jsxs","children","_jsx","Link","to","type","map","actor","src","profile_path","alt","width","name","character","some","child","id","Math","floor","random","_yield$axios$get","data","axios","abrupt","_x"],"sourceRoot":""}