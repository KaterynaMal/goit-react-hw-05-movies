{"version":3,"file":"static/js/777.cb35021f.chunk.js","mappings":"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","sources":["pages/CastPage.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetailsPage.module.css?879c","pages/MovieDetails/MovieDetailsPage.jsx","pages/ReviewsPage.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport React from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\n\nimport { requestMovies } from 'services/api';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const location = useLocation();\n  const [backLink] = useState(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchCast = async () => {\n      try {\n        const endpoint = `/movie/${movieId}/credits`;\n        const result = await requestMovies(endpoint);\n        setCast(result.cast);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  return (\n    <div>\n      <Link to={backLink}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      {cast && (\n        <ul>\n          {cast.map(actor => (\n            <li\n              key={\n                cast.some(child => child.id === actor.id)\n                  ? actor.id + Math.floor(Math.random() * 1000000)\n                  : actor.id\n              }\n            >\n              <img\n                src={\n                  actor.profile_path\n                    ? [`https://image.tmdb.org/t/p/w500/${actor.profile_path}`]\n                    : defaultImg\n                }\n                alt=\"poster\"\n                width={250}\n              />\n\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default CastPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__nB6xp\",\"details_container\":\"MovieDetailsPage_details_container__fUB5b\",\"discription\":\"MovieDetailsPage_discription__38JyQ\",\"backBtn\":\"MovieDetailsPage_backBtn__ABi7J\",\"additional\":\"MovieDetailsPage_additional__-ab+1\"};","import React, { Suspense, useEffect, useState } from 'react';\nimport { NavLink, Link, useLocation, useParams, Routes, Route } from 'react-router-dom';\nimport { requestMovies } from 'services/api';\nimport CastPage from '../CastPage';\nimport ReviewsPage from '../ReviewsPage';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const [backLink] = useState(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchMoviesDetails = async () => {\n      try {\n        const endpoint = `/movie/${movieId}`;\n        const result = await requestMovies(endpoint);\n        setMovie(result);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n\n    fetchMoviesDetails();\n  }, [movieId]);\n\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  return (\n    <div className={css.container}>\n      <Link to={backLink}>\n        <button type=\"button\" className={css.backBtn}>\n          Go back\n        </button>\n      </Link>\n\n      {movie && (\n        <div className={css.details_container}>\n          {movie.poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n              width={250}\n            />\n          )}\n          {!movie.poster_path && (\n            <img src={defaultImg} alt={movie.title} width={250} />\n          )}\n\n          <div className={css.discription}>\n            <h2>{movie.title}</h2>\n            <p>User Score: {String(movie.popularity).slice(0, 2)}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{movie.genres.map(item => item.name).join(', ')}</p>\n          </div>\n        </div>\n      )}\n\n      <div className={css.additional}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n\n          <li>\n            <NavLink to=\"reviews\">Rewievs</NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense>\n        <Routes>\n          <Route path=\"cast\" element={<CastPage />} />\n          <Route path=\"reviews\" element={<ReviewsPage />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\n\nimport { requestMovies } from 'services/api';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState(null);\n\n  const location = useLocation();\n  const [backLink] = useState(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchReview = async () => {\n      try {\n        const endpoint = `/movie/${movieId}/reviews`;\n        const result = await requestMovies(endpoint);\n        setReview(result.results);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink}>\n        <button type=\"button\">Go back</button>\n      </Link>\n\n      {review && review.length > 0 ? (\n        <ul>\n          {review.map(post => (\n            <li key={post.id}>\n              <h3>{post.author}</h3>\n              <p>{post.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'f0dfa7497e7951551870a1200c4b66ff';\n\nconst requestMovies = async endpoint => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n};\n\nexport { requestMovies };\n"],"names":["_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","location","useLocation","_useState3","state","from","backLink","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","result","_context","prev","next","concat","requestMovies","sent","t0","console","error","message","stop","apply","arguments","_jsxs","children","_jsx","Link","to","type","map","actor","src","profile_path","alt","width","name","character","some","child","id","Math","floor","random","_useState4","movie","setMovie","fetchMoviesDetails","className","css","poster_path","title","String","popularity","slice","overview","genres","item","join","NavLink","Suspense","Routes","Route","path","element","CastPage","ReviewsPage","review","setReview","fetchReview","results","length","post","author","content","_yield$axios$get","data","axios","abrupt","_x"],"sourceRoot":""}